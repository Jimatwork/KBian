package com.kubian;

import com.kubian.mode.AppUser;
import com.kubian.mode.User;
import com.kubian.mode.dao.AppUserDao;
import com.kubian.mode.dao.UserDao;
import com.kubian.mode.util.ReturnMsg;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageRequest;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

/**
 * 用户管理
 * ClassName:UserManagerController
 * @Description: TODO
 * @author WangW
 * @date 2018年4月11日
 */
@RestController
public class UserManagerController {

    @Autowired
    private AppUserDao appUserDao;
    @Autowired
    private UserDao userDao;

    private static ReturnMsg returnMsg = new ReturnMsg();

    /**
     * 查询所有的APPuser
     *
     * @param page
     * @param limit
     * @return Object
     * @throws
     * @Description: TODO
     * @author WangW
     * @date 2018年4月11日
     */
    @RequestMapping(value = "/getAppUserList")
    @ResponseBody
    public Object getAppUserList(Integer page, Integer limit) {
    	PageRequest pageable = new PageRequest(page, limit);
        Page<AppUser> us = appUserDao.findAll(pageable);
      
        return us;
    }

    /**
     * 打开或关闭app用户的pc端登录权限
     *
     * @param id
     * @param isPc
     * @return Object
     * @throws
     * @Description: TODO
     * @author WangW
     * @date 2018年4月11日
     */
    @RequestMapping(value = "/setPcLogin")
    @ResponseBody
    public ReturnMsg setPcLogin(Long id,Integer isPc) {
    	ReturnMsg returnMsg = new ReturnMsg();
        AppUser au =appUserDao.findById(id);
        au.setIsPc(isPc);
        if (isPc == 1) {
            User us = new User();
            us.setUserName(au.getPhone());
            us.setUserPwd(au.getPhonePwd());
            us.setAuId(au.getId());
            us.setUserRole(2);
            userDao.save(us);
            returnMsg.setSuccess(true);
        } else {
            userDao.delete(userDao.findByAuId(id));
            returnMsg.setSuccess(true);
        }
        return returnMsg;
    }
}
